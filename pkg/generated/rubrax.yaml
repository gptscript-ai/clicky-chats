paths:
  /threads/{thread_id}/runs/{run_id}/x-confirm:
    post:
      operationId: xConfirmRun
      parameters:
        - description: The ID of the [thread](/docs/api-reference/threads) to which this run belongs.
          in: path
          name: thread_id
          required: true
          schema:
            type: string
        - description: The ID of the run that requires the tool output submission.
          in: path
          name: run_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/XConfirmRunToolRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '../server/openapi.yaml#/components/schemas/RunObject'
          description: OK
      summary: |
        When a run has the `status: "requires_confirmation"` and `required_action.type` is `confirm`, this endpoint can be used to confirm or deny the tool call.
  /threads/{thread_id}/runs/{run_id}/x-stream:
    get:
      operationId: xStreamRun
      summary: Stream run events when the run is in progress
      parameters:
        - in: path
          name: run_id
          required: true
          schema:
            type: string
        - in: path
          name: thread_id
          required: true
          schema:
            type: string
        - in: query
          name: index
          schema:
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '../server/openapi.yaml#/components/schemas/RunObject'
          description: OK
  /threads/{thread_id}/runs/{run_id}/steps/{step_id}/x-events:
    get:
      operationId: xListRunStepEvents
      summary: List run step events
      parameters:
        - in: path
          name: thread_id
          required: true
          schema:
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            type: string
        - in: path
          name: step_id
          required: true
          schema:
            type: string
        - in: query
          required: false
          name: stream
          schema:
            type: boolean
        - in: query
          name: index
          schema:
            type: integer
          required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XListRunStepEventsResponse'
  /x-threads:
    get:
      operationId: xListThreads
      summary: List threads
      parameters:
        - description: |
            A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20.
          in: query
          name: limit
          schema:
            default: 20
            type: integer
        - description: |
            Sort order by the `created_at` timestamp of the objects. `asc` for ascending order and `desc` for descending order.
          in: query
          name: order
          schema:
            default: desc
            enum:
              - asc
              - desc
            type: string
        - description: |
            A cursor for use in pagination. `after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after=obj_foo in order to fetch the next page of the list.
          in: query
          name: after
          schema:
            type: string
        - description: |
            A cursor for use in pagination. `before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include before=obj_foo in order to fetch the previous page of the list.
          in: query
          name: before
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/XListThreadsResponse"
  /x-tools:
    post:
      operationId: xCreateTool
      summary: Creates a tool for use with gptscript engine.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/XCreateToolRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/XToolObject"
    get:
      operationId: xListTools
      summary: List tools
      parameters:
        - description: |
            A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20.
          in: query
          name: limit
          schema:
            default: 20
            type: integer
        - description: |
            Sort order by the `created_at` timestamp of the objects. `asc` for ascending order and `desc` for descending order.
          in: query
          name: order
          schema:
            default: desc
            enum:
              - asc
              - desc
            type: string
        - description: |
            A cursor for use in pagination. `after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after=obj_foo in order to fetch the next page of the list.
          in: query
          name: after
          schema:
            type: string
        - description: |
            A cursor for use in pagination. `before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include before=obj_foo in order to fetch the previous page of the list.
          in: query
          name: before
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/XListToolsResponse"

  /x-tools/{id}:
    get:
      operationId: xGetTool
      summary: Get tool
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/XToolObject"
    post:
      operationId: xModifyTool
      summary: Modify tool
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/XModifyToolRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/XToolObject"
    delete:
      operationId: xDeleteTool
      summary: Delete tool
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/XDeleteToolResponse"
  /x-tools/inspect:
    post:
      operationId: xInspectTool
      summary: Inspect tool
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/XInspectToolRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XInspectToolResponse'
  /x-tools/run:
    post:
      operationId: xRunTool
      summary: Run tool
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/XRunToolRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XListRunStepEventsResponse'
  /x-tools/{tool_id}/confirm:
    post:
      operationId: xConfirmToolRun
      summary: Confirm tool run
      parameters:
        - in: path
          name: tool_id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/XConfirmToolRunRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XListRunStepEventsResponse'
    summary: |
      When a tool run has an event of type `callConfirm`, this endpoint can be used to confirm or deny the tool call.

components:
  schemas:
    XConfirmToolRunRequest:
      additionalProperties: false
      properties:
        stream:
          description: |
            If `true`, returns a stream of events that happen during the tool run as server-sent events, terminating when the tool run enters a terminal state with a `data: [DONE]` message.
          nullable: true
          type: boolean
        confirmation:
          description: The confirmation to submit.
          type: boolean
      required:
        - confirmation
    XConfirmRunToolRequest:
      additionalProperties: false
      properties:
        stream:
          description: |
            If `true`, returns a stream of events that happen during the Run as server-sent events, terminating when the Run enters a terminal state with a `data: [DONE]` message.
          nullable: true
          type: boolean
        confirmation:
          description: The confirmation to submit.
          properties:
            confirmation:
              description: The whether to confirm or deny the request.
              type: boolean
            tool_call_id:
              description: The ID of the tool call in the `required_action` object within the run object the output is being submitted for.
              type: string
          type: object
      required:
        - confirmation
      type: object
    XInspectToolRequest:
      additionalProperties: false
      properties:
        url:
          type: string
          description: URL of the tool to inspect
        subtool:
          x-go-type-skip-optional-pointer: true
          type: string
          description: The name of the sub tool to use rather than the first tool
      type: object
      required:
        - url
    XInspectToolResponse:
      properties:
        name:
          type: string
          description: The name of the tool
        entry_tool_id:
          type: string
          description: The id of the tool that is the entry point
        tool_set:
          type: object
          description: The set of tools in the tool
          additionalProperties:
            $ref: '#/components/schemas/XToolSetTool'
        exports:
          type: object
          description: The exports of the tool
          x-go-type-skip-optional-pointer: true
      type: object
      required:
        - name
        - entry_tool_id
        - tool_set
    XToolSetTool:
      properties:
        instructions:
          type: string
          description: The instructions for the tool
        id:
          type: string
        tool_mapping:
          type: object
          additionalProperties:
            type: string
        local_tools:
          type: object
          additionalProperties:
            type: string
        source:
          type: object
          properties:
            location:
              type: string
            line_no:
              type: integer
            repo:
              type: object
              properties:
                vcs:
                  type: string
                  description: VCS The VCS type, such as "git"
                root:
                  type: string
                  description: The URL where the VCS repo can be found
                path:
                  type: string
                  description: The path in the repo of this source. This should refer to a directory and not the actual file
                name:
                  type: string
                  description: The filename of the source in the repo, relative to Path
                revision:
                  type: string
                  description: The revision of this source
        working_dir:
          type: string
    XRunToolRequest:
      additionalProperties: false
      properties:
        file:
          type: string
          description: The file to run
        env_vars:
          x-go-type-skip-optional-pointer: true
          type: array
          description: Environment variables
          items:
            type: string
        input:
          type: string
          x-go-type-skip-optional-pointer: true
        subtool:
          x-go-type-skip-optional-pointer: true
          type: string
          description: The name of the sub tool to use rather than the first tool
          nullable: true
        cache:
          type: boolean
          description: Whether to cache the tool
          default: true
        dangerous_mode:
          x-go-type-skip-optional-pointer: true
          type: boolean
          description: Dangerous mode enabled means that any tool calls will not be prompted for confirmation
      type: object
      required:
        - file
    XListRunStepEventsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/XRunStepEventObject'
          type: array
        object:
          example: list
          type: string
      required:
        - object
        - data
      type: object
    XRunStepEventObject:
      additionalProperties: false
      properties:
        callContext:
          type: object
          description: The call context
          x-go-type-skip-optional-pointer: true
        runStepID:
          type: string
          description: The id of the run step
        time:
          description: The time of the event
          type: string
          format: date-time
        toolSubCalls:
          type: object
          description: The tool sub calls
          x-go-type-skip-optional-pointer: true
        toolResults:
          type: integer
        type:
          type: string
        chatCompletionId:
          type: string
        chatRequest:
          type: object
          x-go-type: any
          x-go-type-skip-optional-pointer: true
        chatResponse:
          type: object
          x-go-type: any
          x-go-type-skip-optional-pointer: true
        chatResponseCached:
          type: boolean
          x-go-type-skip-optional-pointer: true
        content:
          type: string
        runID:
          type: string
        input:
          type: string
        output:
          type: string
        err:
          type: string
      type: object
      required:
        - runStepID
        - runID
        - time

    XListThreadsResponse:
      properties:
        data:
          items:
            $ref: '../server/openapi.yaml#/components/schemas/ThreadObject'
          type: array
        first_id:
          example: thread_abc123
          type: string
        has_more:
          example: false
          type: boolean
        last_id:
          example: thread_abc456
          type: string
        object:
          example: list
          type: string
      required:
        - object
        - data
        - first_id
        - last_id
        - has_more
      type: object
    XCreateToolRequest:
      additionalProperties: false
      type: object
      properties:
        url:
          type: string
          description: URL of the tool
          nullable: true
        contents:
          type: string
          description: Contents of the tool
          nullable: true
        env_vars:
          type: array
          description: Environment variables
          items:
            type: string
        subtool:
          type: string
          description: The name of the sub tool to use rather than the first tool
          nullable: true
    XModifyToolRequest:
      additionalProperties: false
      type: object
      properties:
        url:
          type: string
          description: URL of the tool
          nullable: true
        contents:
          type: string
          description: Contents of the tool
          nullable: true
        subtool:
          type: string
          description: The name of the sub tool to use rather than the first tool
          nullable: true
        env_vars:
          type: array
          description: Environment variables
          items:
            type: string
        retool:
          default: false
          type: boolean
          description: Pull the contents of the tool from the URL to redefine the tool
    XToolObject:
      additionalProperties: false
      type: object
      properties:
        id:
          type: string
          description: The id of the tool
        created_at:
          description: The Unix timestamp (in seconds) for when the assistant file was created.
          type: integer
        name:
          type: string
          description: The name of the tool
        description:
          type: string
          description: Description of the tool
        url:
          type: string
          description: URL of the tool
          nullable: true
        contents:
          type: string
          description: Contents of the tool
          nullable: true
        subtool:
          type: string
          description: The name of the sub tool to use rather than the first tool
          nullable: true
        env_vars:
          type: array
          description: Environment variables
          items:
            type: string
        object:
          description: The object type, which is always `tool`.
          type: string
          enum: [ tool ]
      required:
        - id
        - created_at
        - object
    XListToolsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/XToolObject'
          type: array
        first_id:
          example: tool_abc123
          type: string
        has_more:
          example: false
          type: boolean
        last_id:
          example: tool_abc456
          type: string
        object:
          example: list
          type: string
      required:
        - object
        - data
        - first_id
        - last_id
        - has_more
      type: object
    XDeleteToolResponse:
      additionalProperties: false
      type: object
      properties:
        id:
          type: string
        deleted:
          type: boolean
        object:
          type: string
          enum: [ tool.deleted ]
      required:
        - id
        - object
        - deleted
    XAssistantToolsGPTScript:
      properties:
        x-tool:
          type: string
        type:
          description: 'The type of tool being defined: `gptscript`'
          enum:
            - gptscript
          type: string
      required:
        - type
        - x-tool
      title: GPTScript tool
      type: object